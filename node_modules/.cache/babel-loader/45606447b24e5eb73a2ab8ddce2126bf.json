{"ast":null,"code":"var _jsxFileName = \"/Users/kayresantos/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const [approvedTransactions, setApprovedTransactions] = useState(new Map());\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    });\n    setApprovedTransactions(prevApprovedTransactions => {\n      const updatedApprovedTransactions = new Map(prevApprovedTransactions);\n      updatedApprovedTransactions.set(transactionId, newValue);\n      return updatedApprovedTransactions;\n    });\n  }, [fetchWithoutCache]);\n\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval,\n      approved: approvedTransactions.get(transaction.id) || false\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"1HgATlI/C41J5+MCWbvPD7b/zgg=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useState","useCustomFetch","TransactionPane","Transactions","transactions","fetchWithoutCache","loading","approvedTransactions","setApprovedTransactions","Map","setTransactionApproval","transactionId","newValue","value","prevApprovedTransactions","updatedApprovedTransactions","set","map","transaction","get","id"],"sources":["/Users/kayresantos/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { SetTransactionApprovalParams } from \"src/utils/types\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\";\n\nexport const Transactions: TransactionsComponent = ({ transactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch();\n\n  const [approvedTransactions, setApprovedTransactions] = useState(new Map());\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\n        \"setTransactionApproval\",\n        {\n          transactionId,\n          value: newValue,\n        }\n      );\n\n      setApprovedTransactions((prevApprovedTransactions) => {\n        const updatedApprovedTransactions = new Map(prevApprovedTransactions);\n        updatedApprovedTransactions.set(transactionId, newValue);\n        return updatedApprovedTransactions;\n      });\n    },\n    [fetchWithoutCache]\n  );\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>;\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n          approved={approvedTransactions.get(transaction.id) || false}\n        />\n      ))}\n    </div>\n  );\n};\n\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;;AAGA,OAAO,MAAMC,YAAmC,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACvE,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCL,cAAc,EAArD;EAEA,MAAM,CAACM,oBAAD,EAAuBC,uBAAvB,IAAkDR,QAAQ,CAAC,IAAIS,GAAJ,EAAD,CAAhE;EAEA,MAAMC,sBAAsB,GAAGX,WAAW,CACxC,eAAuC;IAAA,IAAhC;MAAEY,aAAF;MAAiBC;IAAjB,CAAgC;IACrC,MAAMP,iBAAiB,CACrB,wBADqB,EAErB;MACEM,aADF;MAEEE,KAAK,EAAED;IAFT,CAFqB,CAAvB;IAQAJ,uBAAuB,CAAEM,wBAAD,IAA8B;MACpD,MAAMC,2BAA2B,GAAG,IAAIN,GAAJ,CAAQK,wBAAR,CAApC;MACAC,2BAA2B,CAACC,GAA5B,CAAgCL,aAAhC,EAA+CC,QAA/C;MACA,OAAOG,2BAAP;IACD,CAJsB,CAAvB;EAKD,CAfuC,EAgBxC,CAACV,iBAAD,CAhBwC,CAA1C;;EAmBA,IAAID,YAAY,KAAK,IAArB,EAA2B;IACzB,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGA,YAAY,CAACa,GAAb,CAAkBC,WAAD,iBAChB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAEZ,OAHX;MAIE,sBAAsB,EAAEI,sBAJ1B;MAKE,QAAQ,EAAEH,oBAAoB,CAACY,GAArB,CAAyBD,WAAW,CAACE,EAArC,KAA4C;IALxD,GACOF,WAAW,CAACE,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAzCM;;GAAMjB,Y;UAC4BF,c;;;KAD5BE,Y"},"metadata":{},"sourceType":"module"}